generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  google_id     String         @unique
  location_id   Int?
  userName      String?
  email         String?        @unique
  password      String?
  avatar        String?
  bio           String?
  level         Int?
  attendees     Attendee[]
  comments      Comment[]
  meets         Meet[]
  notifications Notification[]
  posts         Post[]
}

model Image {
  id       Int    @id @default(autoincrement())
  url      String
  category String
  Post     Post[]
}

model Meet {
  id          Int        @id @default(autoincrement())
  time_date   String
  location    String
  eventName   String
  description String
  imageUrl    String
  userId      Int
  attendees   Attendee[]
  owner       User       @relation(fields: [userId], references: [id])

  @@index([userId], map: "Meet_userId_fkey")
}

model Notification {
  id        Int    @id @default(autoincrement())
  userId    Int
  message   String
  recipient User   @relation(fields: [userId], references: [id])

  @@index([userId], map: "Notification_userId_fkey")
}

model Plant {
  id          Int     @id @default(autoincrement())
  plantAPIID  Int?
  species     String?
  commonName  String?
  nickname    String?
  location    String?
  imageUrl    String?
  description String?
  tasks       Task[]
}

model Task {
  id              Int    @id @default(autoincrement())
  taskName        String
  frequency       String
  lastCompleted   String
  nextComplection String
  active          String
  plant_id        Int
  taskPlant       Plant  @relation(fields: [plant_id], references: [id])

  @@index([plant_id], map: "Task_plant_id_fkey")
}

model Post {
  id       Int       @id @default(autoincrement())
  userId   Int
  image_id Int?
  message  String
  comments Comment[]
  Image    Image?    @relation(fields: [image_id], references: [id])
  owner    User      @relation(fields: [userId], references: [id])

  @@index([image_id], map: "Post_image_id_fkey")
  @@index([userId], map: "Post_userId_fkey")
}

model Comment {
  id          Int    @id @default(autoincrement())
  userId      Int
  message     String
  post_id     Int
  commentPost Post   @relation(fields: [post_id], references: [id])
  commentor   User   @relation(fields: [userId], references: [id])

  @@index([post_id], map: "Comment_post_id_fkey")
  @@index([userId], map: "Comment_userId_fkey")
}

model Attendee {
  id          Int  @id @default(autoincrement())
  meet_id     Int
  userId      Int
  meet        Meet @relation(fields: [meet_id], references: [id])
  participant User @relation(fields: [userId], references: [id])

  @@index([meet_id], map: "Attendee_meet_id_fkey")
  @@index([userId], map: "Attendee_userId_fkey")
}
